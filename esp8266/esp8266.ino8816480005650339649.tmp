#include "RSAAuth.h"                         // Khai báo sử dụng thư viện RSA (Rx = D1, Tx = D 2)
#include <ArduinoJson.h>                     // Khai báo sử dụng thư viện đọc chuỗi Json
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

#define BAUD_RATE 9600                       // Tốc độ giao tiếp UART 9600 bit/s
// Thông tin về wifi
#define ssid "Hai Anh"
#define password "123456789"
#define mqtt_server "mqtt://localhost"
const uint16_t mqtt_port = 1883;              //Port của CloudMQTT TCP
WiFiClient espClient;
PubSubClient client(espClient);

DynamicJsonDocument doc(2048); // Khởi tạo document Jon động với dữ liệu được lưu trong bộ nhớ heap
// trong đề tài này chúng em sử dụng 2kb <=> 2028 byte
// khuyến khích document có kích thước lớn hơn 1kb

/////______Các biến cho việc gửi và nhận______/////
char  cstr[255];
byte  m[255];
byte  buff[255];
int   BEGIN=0;
int   END=0;
int   DesLen=0;
/////______Các biến cho việc gửi và nhận______/////
void setup()
{
    setup_wifi();
    client.setServer(mqtt_server, mqtt_port); 
    client.setCallback(callback);
    Serial.begin(BAUD_RATE);    // Tốc độ giao tiếp với máy tính
    swSer.begin(BAUD_RATE);     // Tốc độ giao tiếp UART giữa 2 esp 9600 bit/s
}

// Hàm kết nối wifi
void setup_wifi() 
{
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}
// Hàm call back để nhận dữ liệu
void callback(char* topic, byte* payload, unsigned int length) 
{
  Serial.print("Co tin nhan moi tu topic:");
  Serial.println(topic);
  for (int i = 0; i < length; i++) 
    Serial.print((char)payload[i]);
  Serial.println();
}

void gui (String payload){
   for(int i=0; i<payload.length(); i++) // vòng lặp chạy từ 0-độ dài của chuỗi payload để reset mảng cstr
            cstr[i]=0;
    payload.toCharArray(cstr,payload.length()+1);
    yield();                                        // Delay một khoản thời gian rất ngắn
    rsa.Send(cstr); 
}
void loop()
{ 
    String payload = "LED13 0";
    gui(payload);
    delay(1000);
    payload = "LED13 1";
    gui(payload);
    delay(1000);
    DesLen=0;
    if(rsa.Receive(buff,&BEGIN,&END,m,&DesLen)) // Nếu có dữ liệu từ device truyền qua
        // Nó sẽ kiểm tra dữ liệu nhận được đúng với dữ liệu mà device truyền qua
        // thì thực hiện pub lên broker
    {
        if(DesLen>0)
        {
            
        }
    }
    else Serial.println("Nhan error:");

}
